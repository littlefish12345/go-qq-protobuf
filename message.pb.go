// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: message/message.proto

package go_qq_protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContentHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageNum   *uint32 `protobuf:"varint,1,opt,name=PackageNum,proto3,oneof" json:"PackageNum,omitempty"`
	PackageIndex *uint32 `protobuf:"varint,2,opt,name=PackageIndex,proto3,oneof" json:"PackageIndex,omitempty"`
	DivSeqence   *uint32 `protobuf:"varint,3,opt,name=DivSeqence,proto3,oneof" json:"DivSeqence,omitempty"`
	AutoReply    *uint32 `protobuf:"varint,4,opt,name=AutoReply,proto3,oneof" json:"AutoReply,omitempty"`
}

func (x *ContentHead) Reset() {
	*x = ContentHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentHead) ProtoMessage() {}

func (x *ContentHead) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentHead.ProtoReflect.Descriptor instead.
func (*ContentHead) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{0}
}

func (x *ContentHead) GetPackageNum() uint32 {
	if x != nil && x.PackageNum != nil {
		return *x.PackageNum
	}
	return 0
}

func (x *ContentHead) GetPackageIndex() uint32 {
	if x != nil && x.PackageIndex != nil {
		return *x.PackageIndex
	}
	return 0
}

func (x *ContentHead) GetDivSeqence() uint32 {
	if x != nil && x.DivSeqence != nil {
		return *x.DivSeqence
	}
	return 0
}

func (x *ContentHead) GetAutoReply() uint32 {
	if x != nil && x.AutoReply != nil {
		return *x.AutoReply
	}
	return 0
}

type PluginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResId       *uint32 `protobuf:"varint,1,opt,name=ResId,proto3,oneof" json:"ResId,omitempty"`
	PackageName *string `protobuf:"bytes,2,opt,name=PackageName,proto3,oneof" json:"PackageName,omitempty"`
	NewVersion  *uint32 `protobuf:"varint,3,opt,name=NewVersion,proto3,oneof" json:"NewVersion,omitempty"`
	ResType     *uint32 `protobuf:"varint,4,opt,name=ResType,proto3,oneof" json:"ResType,omitempty"`
	LanType     *uint32 `protobuf:"varint,5,opt,name=LanType,proto3,oneof" json:"LanType,omitempty"`
	Priority    *uint32 `protobuf:"varint,6,opt,name=Priority,proto3,oneof" json:"Priority,omitempty"`
	ResName     *string `protobuf:"bytes,7,opt,name=ResName,proto3,oneof" json:"ResName,omitempty"`
	ResDesc     *string `protobuf:"bytes,8,opt,name=ResDesc,proto3,oneof" json:"ResDesc,omitempty"`
	ResUrlBig   *string `protobuf:"bytes,9,opt,name=ResUrlBig,proto3,oneof" json:"ResUrlBig,omitempty"`
	ResUrlSmall *string `protobuf:"bytes,10,opt,name=ResUrlSmall,proto3,oneof" json:"ResUrlSmall,omitempty"`
	ResConf     *string `protobuf:"bytes,11,opt,name=ResConf,proto3,oneof" json:"ResConf,omitempty"`
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{1}
}

func (x *PluginInfo) GetResId() uint32 {
	if x != nil && x.ResId != nil {
		return *x.ResId
	}
	return 0
}

func (x *PluginInfo) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *PluginInfo) GetNewVersion() uint32 {
	if x != nil && x.NewVersion != nil {
		return *x.NewVersion
	}
	return 0
}

func (x *PluginInfo) GetResType() uint32 {
	if x != nil && x.ResType != nil {
		return *x.ResType
	}
	return 0
}

func (x *PluginInfo) GetLanType() uint32 {
	if x != nil && x.LanType != nil {
		return *x.LanType
	}
	return 0
}

func (x *PluginInfo) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *PluginInfo) GetResName() string {
	if x != nil && x.ResName != nil {
		return *x.ResName
	}
	return ""
}

func (x *PluginInfo) GetResDesc() string {
	if x != nil && x.ResDesc != nil {
		return *x.ResDesc
	}
	return ""
}

func (x *PluginInfo) GetResUrlBig() string {
	if x != nil && x.ResUrlBig != nil {
		return *x.ResUrlBig
	}
	return ""
}

func (x *PluginInfo) GetResUrlSmall() string {
	if x != nil && x.ResUrlSmall != nil {
		return *x.ResUrlSmall
	}
	return ""
}

func (x *PluginInfo) GetResConf() string {
	if x != nil && x.ResConf != nil {
		return *x.ResConf
	}
	return ""
}

type AppShareInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppShareId       *uint32     `protobuf:"varint,1,opt,name=AppShareId,proto3,oneof" json:"AppShareId,omitempty"`
	AppShareCookie   []byte      `protobuf:"bytes,2,opt,name=AppShareCookie,proto3,oneof" json:"AppShareCookie,omitempty"`
	AppShareResource *PluginInfo `protobuf:"bytes,3,opt,name=AppShareResource,proto3,oneof" json:"AppShareResource,omitempty"`
}

func (x *AppShareInfo) Reset() {
	*x = AppShareInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppShareInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppShareInfo) ProtoMessage() {}

func (x *AppShareInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppShareInfo.ProtoReflect.Descriptor instead.
func (*AppShareInfo) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{2}
}

func (x *AppShareInfo) GetAppShareId() uint32 {
	if x != nil && x.AppShareId != nil {
		return *x.AppShareId
	}
	return 0
}

func (x *AppShareInfo) GetAppShareCookie() []byte {
	if x != nil {
		return x.AppShareCookie
	}
	return nil
}

func (x *AppShareInfo) GetAppShareResource() *PluginInfo {
	if x != nil {
		return x.AppShareResource
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageHead    *MessageHead  `protobuf:"bytes,1,opt,name=MessageHead,proto3,oneof" json:"MessageHead,omitempty"`
	MessageContent *ContentHead  `protobuf:"bytes,2,opt,name=MessageContent,proto3,oneof" json:"MessageContent,omitempty"`
	MessageBody    *MessageBody  `protobuf:"bytes,3,opt,name=MessageBody,proto3,oneof" json:"MessageBody,omitempty"`
	AppShareInfo   *AppShareInfo `protobuf:"bytes,4,opt,name=AppShareInfo,proto3,oneof" json:"AppShareInfo,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetMessageHead() *MessageHead {
	if x != nil {
		return x.MessageHead
	}
	return nil
}

func (x *Message) GetMessageContent() *ContentHead {
	if x != nil {
		return x.MessageContent
	}
	return nil
}

func (x *Message) GetMessageBody() *MessageBody {
	if x != nil {
		return x.MessageBody
	}
	return nil
}

func (x *Message) GetAppShareInfo() *AppShareInfo {
	if x != nil {
		return x.AppShareInfo
	}
	return nil
}

type UinPairMessages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastReadTime     *uint32    `protobuf:"varint,1,opt,name=LastReadTime,proto3,oneof" json:"LastReadTime,omitempty"`
	PeerUin          *int64     `protobuf:"varint,2,opt,name=PeerUin,proto3,oneof" json:"PeerUin,omitempty"`
	MessagCompleted  *uint32    `protobuf:"varint,3,opt,name=MessagCompleted,proto3,oneof" json:"MessagCompleted,omitempty"`
	Message          []*Message `protobuf:"bytes,4,rep,name=Message,proto3" json:"Message,omitempty"`
	UnreadMessageNum *uint32    `protobuf:"varint,5,opt,name=UnreadMessageNum,proto3,oneof" json:"UnreadMessageNum,omitempty"`
	C2CType          *uint32    `protobuf:"varint,8,opt,name=C2CType,proto3,oneof" json:"C2CType,omitempty"`
	ServiceType      *uint32    `protobuf:"varint,9,opt,name=ServiceType,proto3,oneof" json:"ServiceType,omitempty"`
	PbReserve        []byte     `protobuf:"bytes,10,opt,name=PbReserve,proto3,oneof" json:"PbReserve,omitempty"`
	ToTinyId         *uint64    `protobuf:"varint,11,opt,name=ToTinyId,proto3,oneof" json:"ToTinyId,omitempty"`
}

func (x *UinPairMessages) Reset() {
	*x = UinPairMessages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UinPairMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UinPairMessages) ProtoMessage() {}

func (x *UinPairMessages) ProtoReflect() protoreflect.Message {
	mi := &file_message_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UinPairMessages.ProtoReflect.Descriptor instead.
func (*UinPairMessages) Descriptor() ([]byte, []int) {
	return file_message_message_proto_rawDescGZIP(), []int{4}
}

func (x *UinPairMessages) GetLastReadTime() uint32 {
	if x != nil && x.LastReadTime != nil {
		return *x.LastReadTime
	}
	return 0
}

func (x *UinPairMessages) GetPeerUin() int64 {
	if x != nil && x.PeerUin != nil {
		return *x.PeerUin
	}
	return 0
}

func (x *UinPairMessages) GetMessagCompleted() uint32 {
	if x != nil && x.MessagCompleted != nil {
		return *x.MessagCompleted
	}
	return 0
}

func (x *UinPairMessages) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *UinPairMessages) GetUnreadMessageNum() uint32 {
	if x != nil && x.UnreadMessageNum != nil {
		return *x.UnreadMessageNum
	}
	return 0
}

func (x *UinPairMessages) GetC2CType() uint32 {
	if x != nil && x.C2CType != nil {
		return *x.C2CType
	}
	return 0
}

func (x *UinPairMessages) GetServiceType() uint32 {
	if x != nil && x.ServiceType != nil {
		return *x.ServiceType
	}
	return 0
}

func (x *UinPairMessages) GetPbReserve() []byte {
	if x != nil {
		return x.PbReserve
	}
	return nil
}

func (x *UinPairMessages) GetToTinyId() uint64 {
	if x != nil && x.ToTinyId != nil {
		return *x.ToTinyId
	}
	return 0
}

var File_message_message_proto protoreflect.FileDescriptor

var file_message_message_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x01,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a,
	0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x00, 0x52, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x0c, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x44,
	0x69, 0x76, 0x53, 0x65, 0x71, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x02, 0x52, 0x0a, 0x44, 0x69, 0x76, 0x53, 0x65, 0x71, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x09, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x44, 0x69, 0x76, 0x53, 0x65, 0x71, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x89, 0x04, 0x0a, 0x0a, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x19, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x05, 0x52, 0x65, 0x73, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0a, 0x4e, 0x65, 0x77, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x07, 0x52, 0x65, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x4c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04, 0x52, 0x07, 0x4c, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x07, 0x52, 0x65, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x07, 0x52, 0x65, 0x73, 0x44, 0x65, 0x73, 0x63,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x55, 0x72, 0x6c, 0x42, 0x69, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x52, 0x65, 0x73, 0x55, 0x72, 0x6c,
	0x42, 0x69, 0x67, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x55, 0x72, 0x6c,
	0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x0b, 0x52,
	0x65, 0x73, 0x55, 0x72, 0x6c, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a,
	0x07, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a,
	0x52, 0x07, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x52, 0x65, 0x73, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4e, 0x65, 0x77, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4c, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52,
	0x65, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x73, 0x44, 0x65,
	0x73, 0x63, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x52, 0x65, 0x73, 0x55, 0x72, 0x6c, 0x42, 0x69, 0x67,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x52, 0x65, 0x73, 0x55, 0x72, 0x6c, 0x53, 0x6d, 0x61, 0x6c, 0x6c,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x22, 0xd5, 0x01, 0x0a,
	0x0c, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x0a, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x00, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x0e, 0x41, 0x70,
	0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x3c, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x02, 0x52, 0x10, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x64, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0xaa, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x33, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65,
	0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x48, 0x01, 0x52, 0x0e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x33, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x6f, 0x64, 0x79, 0x48, 0x02, 0x52, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x03, 0x52, 0x0c, 0x41, 0x70,
	0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x42, 0x11, 0x0a,
	0x0f, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x70, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xe4, 0x03, 0x0a, 0x0f, 0x55, 0x69, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0c, 0x4c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x50, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x07, 0x50, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a,
	0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2f, 0x0a, 0x10, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x10, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x32, 0x43, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x04, 0x52, 0x07, 0x43, 0x32, 0x43, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x05, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x50, 0x62, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x06, 0x52, 0x09, 0x50, 0x62,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x54, 0x6f,
	0x54, 0x69, 0x6e, 0x79, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x48, 0x07, 0x52, 0x08,
	0x54, 0x6f, 0x54, 0x69, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x50, 0x65, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x32, 0x43, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x50, 0x62, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x54, 0x6f, 0x54, 0x69, 0x6e, 0x79, 0x49, 0x64, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x66, 0x69, 0x73,
	0x68, 0x31, 0x32, 0x33, 0x34, 0x35, 0x2f, 0x67, 0x6f, 0x2d, 0x71, 0x71, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_message_proto_rawDescOnce sync.Once
	file_message_message_proto_rawDescData = file_message_message_proto_rawDesc
)

func file_message_message_proto_rawDescGZIP() []byte {
	file_message_message_proto_rawDescOnce.Do(func() {
		file_message_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_message_proto_rawDescData)
	})
	return file_message_message_proto_rawDescData
}

var file_message_message_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_message_message_proto_goTypes = []interface{}{
	(*ContentHead)(nil),     // 0: ContentHead
	(*PluginInfo)(nil),      // 1: PluginInfo
	(*AppShareInfo)(nil),    // 2: AppShareInfo
	(*Message)(nil),         // 3: Message
	(*UinPairMessages)(nil), // 4: UinPairMessages
	(*MessageHead)(nil),     // 5: MessageHead
	(*MessageBody)(nil),     // 6: MessageBody
}
var file_message_message_proto_depIdxs = []int32{
	1, // 0: AppShareInfo.AppShareResource:type_name -> PluginInfo
	5, // 1: Message.MessageHead:type_name -> MessageHead
	0, // 2: Message.MessageContent:type_name -> ContentHead
	6, // 3: Message.MessageBody:type_name -> MessageBody
	2, // 4: Message.AppShareInfo:type_name -> AppShareInfo
	3, // 5: UinPairMessages.Message:type_name -> Message
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_message_message_proto_init() }
func file_message_message_proto_init() {
	if File_message_message_proto != nil {
		return
	}
	file_message_messageHead_proto_init()
	file_message_messageBody_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppShareInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UinPairMessages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_message_message_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_message_message_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_message_message_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_message_message_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_message_proto_goTypes,
		DependencyIndexes: file_message_message_proto_depIdxs,
		MessageInfos:      file_message_message_proto_msgTypes,
	}.Build()
	File_message_message_proto = out.File
	file_message_message_proto_rawDesc = nil
	file_message_message_proto_goTypes = nil
	file_message_message_proto_depIdxs = nil
}
